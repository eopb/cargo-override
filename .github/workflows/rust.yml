name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/install-action@cargo-hack
      - name: build
        run: cargo hack build --feature-powerset
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/install-action@cargo-hack
      - name: test
        run: cargo hack test --feature-powerset --exclude-features failing_tests
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: fmt
        run: cargo fmt --check
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: doc
        run: cargo doc --all-features
  minimal:
    runs-on: ubuntu-latest
    name: ubuntu / stable / minimal-versions
    steps:
      - uses: actions/checkout@v3
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install nightly for -Zminimal-versions
        uses: dtolnay/rust-toolchain@nightly
      - name: rustup default stable
        run: rustup default stable
      - name: cargo update -Zminimal-versions
        run: cargo +nightly update -Zminimal-versions
      - name: cargo check
        run: cargo check --locked --all-features
  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.78.0]
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check --all-features
